<?php
{licenseBlock}

namespace {authorNs}\{id}\scripts\update;

use \common_ext_ExtensionUpdater;
use oat\tao\model\ThemeRegistry;
use Jig\Utils\StringUtils;
use oat\tao\model\ThemeNotFoundException;

class Updater extends common_ext_ExtensionUpdater
{
    /**
     * @param string $initialVersion
     * @return string $versionUpdatedTo
     */
    public function update($initialVersion)
    {

    // Sample of an item theme update script
//        if ($this->isVersion('1.0')) {
//            $this->updateItemTheme();
//            $this->setVersion('1.0.1');
//        }
    }
    
    /**
     * Updates the theme, assuming the default naming/directory
     * scheme was used 
     */
    protected function updateItemTheme() {
        // Item themes
        // 'Name of the theme'
        $itemThemes = array(
            '{itemTheme}'
        );

        // override if required
        $defaultTheme = '{itemTheme}';

        foreach($itemThemes as $themeName){
            $pathFragment = StringUtils::removeSpecChars($themeName);
            $themeId = StringUtils::camelize($pathFragment);
            ThemeRegistry::getRegistry()->registerTheme(
                $themeId,
                $themeName,
                implode(DIRECTORY_SEPARATOR, array('{id}', 'views', 'css', 'themes', 'items', $pathFragment, 'theme.css')), array('items')
            );
        }

        ThemeRegistry::getRegistry()->setDefaultTheme('items', $defaultTheme);

        // TAO theme would usually be removed from the stack if custom themes are used
        // Make sure another theme has been set to default in this case.
        if($defaultTheme !== 'tao') {
            try {
                ThemeRegistry::getRegistry()->unregisterTheme('tao');
            } catch (ThemeNotFoundException $e) {
            }
        }
    }
}
